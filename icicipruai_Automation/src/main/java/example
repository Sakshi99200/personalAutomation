@BeforeSuite

	@Parameters("browser")

	// reading browser value from testng.xml file

	public void setup(@Optional("chrome") String browser) throws Exception {

		driver = BaseClass.initializeWebDriver("chrome");

		UtilityClass.loadExcelProperties();
	}
		WebDriverWait wait;
	public static ChromeOptions option;
	public static FirefoxOptions firefoxOption;
	public static EdgeOptions Edgeoption;
	public static FirefoxProfile ffprofile;
	-----------------
	
	public static WebDriver initializeWebDriver(String browser) throws IOException {
		WebDriver driver = null;
		ChromeOptions option;

		try {

			if (browser.equalsIgnoreCase("chrome")) {
				WebDriverManager.chromedriver().setup();
				option = new ChromeOptions();

				option.addArguments("disable-infobars");
				option.addArguments("--disable-notifications");
				option.addArguments("--disable-extensions");
				option.addArguments("--headless");
//				option.setHeadless(false);
				option.addArguments("--disable-gpu");
				option.addArguments("--disable-dev-shm-usage");
				option.addArguments("--no-sandbox");
				option.addArguments("--remote-allow-origins=*");
				option.addArguments("--window-size=1920,1080");
				driver = new ChromeDriver(option);

				if (Desktop.isDesktopSupported() && Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) {
					// Invoke Desktop.browse()
					System.out.println("Desktop browsing is supported on this platform.");

				} else {
					System.err.println("Desktop browsing is not supported on this platform.");

				}

				driver.manage().window().maximize();
				driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(20));
				driver.get(UtilityClass.getDatafromPropertyFile("baseURL"));
				// Save the original tab handle
//				driver.manage().deleteAllCookies();
				driver.getTitle();
				System.out.println(driver.getCurrentUrl());
				System.out.println("chrome driver started Succhessfully..!");

			} else if (browser.equalsIgnoreCase("firefox")) {
				WebDriverManager.firefoxdriver().setup();

				firefoxOption = new FirefoxOptions();
				driver = new FirefoxDriver(firefoxOption);
				ffprofile = new FirefoxProfile();
				driver.manage().window().maximize();
				driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(20));
				ffprofile.setPreference("dom.webnotifications.enabled", false);
				driver.get(UtilityClass.getDatafromPropertyFile("baseURL"));
				driver.manage().deleteAllCookies();
				driver.getTitle();
				System.out.println(driver.getCurrentUrl());

				System.out.println("Firefox driver started successfully..!");

			} else if (browser.equalsIgnoreCase("edge")) {

				System.out.println("edge");
				WebDriverManager.edgedriver().setup();
				Edgeoption = new EdgeOptions();

				driver = new EdgeDriver(Edgeoption);
				Edgeoption.addArguments("start-maximized"); // open Browser in maximized mode
				Edgeoption.addArguments("disable-infobars"); // disabling infobars
				Edgeoption.addArguments("--disable-notification");
				Edgeoption.addArguments("--disable-extensions"); // disabling extensions
//				Edgeoption.addArguments("--disable-gpu"); // applicable to windows os only
				Edgeoption.addArguments("--disable-dev-shm-usage"); // overcome limited resource problems
//				Edgeoption.addArguments("--no-sandbox"); // Bypass OS security model
				Edgeoption.addArguments("--remote-debugging-port=9222");
				Edgeoption.addArguments("--remote-allow-origins=*");
				driver.manage().window().maximize();
				driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(20));
				driver.get(UtilityClass.getDatafromPropertyFile("baseURL"));
				driver.manage().deleteAllCookies();
				driver.getTitle();
				System.out.println(driver.getCurrentUrl());

				System.out.println("Edge driver started successfully..!");

			} else if (browser.equalsIgnoreCase("safari")) {
				System.out.println("safari");

				driver = new SafariDriver();
				System.out.println("safari");

			}

		} catch (IllegalStateException e) {
			System.out.println(e);
			if (driver != null) {
				driver.get("https://sandbox.trusthub.in");

				driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(20));
			}

		}
		return driver;

	}